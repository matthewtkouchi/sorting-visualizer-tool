{"ast":null,"code":"/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: selectionSort.js\r\n Date: JUN_10_2021\r\n \r\n Abstract: Selection sort iterates through an array while constantly storing the minimum valued idx. When a new minimum is selected, the\r\n idx is highlighted. And when the min of the entire iteration is selected, the current idx i and the min found through iterating through\r\n the array is swapped. This is done until all idx's become the current i.\r\n***************************************************************************************************************************************/\nimport { highlightIdx, clearIdx } from \"./util\";\n\nconst selectionSort = unsortedArray => {\n  let arr = [...unsortedArray];\n  let arrSnapshot = [[...arr]];\n  let len = arr.length;\n  let temp, min;\n\n  for (let i = 0; i < len; i++) {\n    min = i;\n\n    for (let j = i + 1; j < len; j++) {\n      highlightIdx(arr, j);\n      arrSnapshot.push([...arr]);\n      arr[j] = { ...arr[j],\n        highlighted: false\n      };\n\n      if (arr[j].value < arr[min].value) {\n        arr[min] = { ...arr[min],\n          highlighted: false\n        };\n        min = j;\n        arr[min] = { ...arr[min],\n          highlighted: true\n        };\n      }\n    }\n\n    temp = arr[i];\n    arr[i] = arr[min];\n    arr[min] = { ...temp\n    };\n    arrSnapshot.push([...arr]);\n  }\n\n  return arrSnapshot;\n};\n\nexport default selectionSort;","map":{"version":3,"sources":["C:/Users/mkouc/OneDrive/Desktop/sorting_visualizer/src/scripts/algorithms/selectionSort.js"],"names":["highlightIdx","clearIdx","selectionSort","unsortedArray","arr","arrSnapshot","len","length","temp","min","i","j","push","highlighted","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,QAAvC;;AAEA,MAAMC,aAAa,GAAIC,aAAD,IAAmB;AACvC,MAAIC,GAAG,GAAG,CAAC,GAAGD,aAAJ,CAAV;AACA,MAAIE,WAAW,GAAG,CAAC,CAAC,GAAGD,GAAJ,CAAD,CAAlB;AACA,MAAIE,GAAG,GAAGF,GAAG,CAACG,MAAd;AACA,MAAIC,IAAJ,EAAUC,GAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,GAAGC,CAAN;;AACA,SAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAjB,EAAoBC,CAAC,GAAGL,GAAxB,EAA6BK,CAAC,EAA9B,EAAkC;AAChCX,MAAAA,YAAY,CAACI,GAAD,EAAMO,CAAN,CAAZ;AACAN,MAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACAA,MAAAA,GAAG,CAACO,CAAD,CAAH,GAAS,EAAE,GAAGP,GAAG,CAACO,CAAD,CAAR;AAAaE,QAAAA,WAAW,EAAE;AAA1B,OAAT;;AACA,UAAIT,GAAG,CAACO,CAAD,CAAH,CAAOG,KAAP,GAAeV,GAAG,CAACK,GAAD,CAAH,CAASK,KAA5B,EAAmC;AACjCV,QAAAA,GAAG,CAACK,GAAD,CAAH,GAAW,EAAE,GAAGL,GAAG,CAACK,GAAD,CAAR;AAAeI,UAAAA,WAAW,EAAE;AAA5B,SAAX;AACAJ,QAAAA,GAAG,GAAGE,CAAN;AACAP,QAAAA,GAAG,CAACK,GAAD,CAAH,GAAW,EAAE,GAAGL,GAAG,CAACK,GAAD,CAAR;AAAeI,UAAAA,WAAW,EAAE;AAA5B,SAAX;AACD;AACF;;AACDL,IAAAA,IAAI,GAAGJ,GAAG,CAACM,CAAD,CAAV;AACAN,IAAAA,GAAG,CAACM,CAAD,CAAH,GAASN,GAAG,CAACK,GAAD,CAAZ;AACAL,IAAAA,GAAG,CAACK,GAAD,CAAH,GAAW,EAAE,GAAGD;AAAL,KAAX;AACAH,IAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACD;;AAED,SAAOC,WAAP;AACD,CAzBD;;AA2BA,eAAeH,aAAf","sourcesContent":["/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: selectionSort.js\r\n Date: JUN_10_2021\r\n \r\n Abstract: Selection sort iterates through an array while constantly storing the minimum valued idx. When a new minimum is selected, the\r\n idx is highlighted. And when the min of the entire iteration is selected, the current idx i and the min found through iterating through\r\n the array is swapped. This is done until all idx's become the current i.\r\n***************************************************************************************************************************************/\r\nimport { highlightIdx, clearIdx } from \"./util\";\r\n\r\nconst selectionSort = (unsortedArray) => {\r\n  let arr = [...unsortedArray];\r\n  let arrSnapshot = [[...arr]];\r\n  let len = arr.length;\r\n  let temp, min;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    min = i;\r\n    for (let j = i + 1; j < len; j++) {\r\n      highlightIdx(arr, j);\r\n      arrSnapshot.push([...arr]);\r\n      arr[j] = { ...arr[j], highlighted: false };\r\n      if (arr[j].value < arr[min].value) {\r\n        arr[min] = { ...arr[min], highlighted: false };\r\n        min = j;\r\n        arr[min] = { ...arr[min], highlighted: true };\r\n      }\r\n    }\r\n    temp = arr[i];\r\n    arr[i] = arr[min];\r\n    arr[min] = { ...temp };\r\n    arrSnapshot.push([...arr]);\r\n  }\r\n\r\n  return arrSnapshot;\r\n};\r\n\r\nexport default selectionSort;\r\n"]},"metadata":{},"sourceType":"module"}