{"ast":null,"code":"/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: bubbleSort.js\r\n Date: JUN_1_2021\r\n \r\n Abstract: Contains Bubble Sort Algorithm which iterates through an unsorted array, swapping at unsorted indexes. The highlighted\r\n indexes are chosen and set for animation through prop management. This occurs until the array doesn't swap through an iteration. At\r\n this point the snapshot container's array indexes are un-highlighted and the container is returned.\r\n***************************************************************************************************************************************/\nimport { swap } from \"./util\";\n\nconst bubbleSort = unsortedArray => {\n  // Declare Local Variables\n  let arr = [...unsortedArray];\n  let arrSnapshot = [[...arr]]; // Each Idx contains an array snapshot\n\n  const len = arr.length;\n  let isSwapping;\n\n  do {\n    isSwapping = false;\n\n    for (let i = 0; i < len - 1; i++) {\n      // If Idx is > Idx + 1\n      if (arr[i].value > arr[i + 1].value) {\n        // Swap Idx Values, Highlight current Idx and Give Idx Props, Store Array Instance\n        swap(arr, i, i + 1);\n        arr[i + 1] = { ...arr[i + 1],\n          highlighted: true\n        };\n        arrSnapshot.push([...arr]); // Reset highlight props\n\n        arr[i + 1] = { ...arr[i + 1],\n          highlighted: false\n        };\n        isSwapping = true; // Else if Idx is < Idx + 1\n      } else {\n        arr[i] = { ...arr[i],\n          highlighted: true\n        };\n        arrSnapshot.push([...arr]);\n        arr[i] = { ...arr[i],\n          highlighted: false\n        };\n      }\n    }\n  } while (isSwapping); // Reset Props to Initials\n\n\n  arrSnapshot[arrSnapshot.length - 1].forEach(idx => {\n    idx.highlighted = false;\n  }); // Return a Sorted Array\n\n  return arrSnapshot;\n};\n\nexport default bubbleSort;","map":{"version":3,"sources":["C:/Users/mkouc/OneDrive/Desktop/sorting_visualizer/src/scripts/algorithms/bubbleSort.js"],"names":["swap","bubbleSort","unsortedArray","arr","arrSnapshot","len","length","isSwapping","i","value","highlighted","push","forEach","idx"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,QAAqB,QAArB;;AAEA,MAAMC,UAAU,GAAIC,aAAD,IAAmB;AACpC;AACA,MAAIC,GAAG,GAAG,CAAC,GAAGD,aAAJ,CAAV;AACA,MAAIE,WAAW,GAAG,CAAC,CAAC,GAAGD,GAAJ,CAAD,CAAlB,CAHoC,CAGN;;AAC9B,QAAME,GAAG,GAAGF,GAAG,CAACG,MAAhB;AACA,MAAIC,UAAJ;;AACA,KAAG;AACDA,IAAAA,UAAU,GAAG,KAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,GAAG,CAA1B,EAA6BG,CAAC,EAA9B,EAAkC;AAChC;AACA,UAAIL,GAAG,CAACK,CAAD,CAAH,CAAOC,KAAP,GAAeN,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,CAAWC,KAA9B,EAAqC;AACnC;AACAT,QAAAA,IAAI,CAACG,GAAD,EAAMK,CAAN,EAASA,CAAC,GAAG,CAAb,CAAJ;AACAL,QAAAA,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,GAAa,EAAE,GAAGL,GAAG,CAACK,CAAC,GAAG,CAAL,CAAR;AAAiBE,UAAAA,WAAW,EAAE;AAA9B,SAAb;AACAN,QAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB,EAJmC,CAMnC;;AACAA,QAAAA,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,GAAa,EAAE,GAAGL,GAAG,CAACK,CAAC,GAAG,CAAL,CAAR;AAAiBE,UAAAA,WAAW,EAAE;AAA9B,SAAb;AACAH,QAAAA,UAAU,GAAG,IAAb,CARmC,CAUnC;AACD,OAXD,MAWO;AACLJ,QAAAA,GAAG,CAACK,CAAD,CAAH,GAAS,EAAE,GAAGL,GAAG,CAACK,CAAD,CAAR;AAAaE,UAAAA,WAAW,EAAE;AAA1B,SAAT;AACAN,QAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACAA,QAAAA,GAAG,CAACK,CAAD,CAAH,GAAS,EAAE,GAAGL,GAAG,CAACK,CAAD,CAAR;AAAaE,UAAAA,WAAW,EAAE;AAA1B,SAAT;AACD;AACF;AACF,GArBD,QAqBSH,UArBT,EANoC,CA6BpC;;;AACAH,EAAAA,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAqB,CAAtB,CAAX,CAAoCM,OAApC,CAA6CC,GAAD,IAAS;AACnDA,IAAAA,GAAG,CAACH,WAAJ,GAAkB,KAAlB;AACD,GAFD,EA9BoC,CAkCpC;;AACA,SAAON,WAAP;AACD,CApCD;;AAsCA,eAAeH,UAAf","sourcesContent":["/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: bubbleSort.js\r\n Date: JUN_1_2021\r\n \r\n Abstract: Contains Bubble Sort Algorithm which iterates through an unsorted array, swapping at unsorted indexes. The highlighted\r\n indexes are chosen and set for animation through prop management. This occurs until the array doesn't swap through an iteration. At\r\n this point the snapshot container's array indexes are un-highlighted and the container is returned.\r\n***************************************************************************************************************************************/\r\n\r\nimport { swap } from \"./util\";\r\n\r\nconst bubbleSort = (unsortedArray) => {\r\n  // Declare Local Variables\r\n  let arr = [...unsortedArray];\r\n  let arrSnapshot = [[...arr]]; // Each Idx contains an array snapshot\r\n  const len = arr.length;\r\n  let isSwapping;\r\n  do {\r\n    isSwapping = false;\r\n    for (let i = 0; i < len - 1; i++) {\r\n      // If Idx is > Idx + 1\r\n      if (arr[i].value > arr[i + 1].value) {\r\n        // Swap Idx Values, Highlight current Idx and Give Idx Props, Store Array Instance\r\n        swap(arr, i, i + 1);\r\n        arr[i + 1] = { ...arr[i + 1], highlighted: true };\r\n        arrSnapshot.push([...arr]);\r\n\r\n        // Reset highlight props\r\n        arr[i + 1] = { ...arr[i + 1], highlighted: false };\r\n        isSwapping = true;\r\n\r\n        // Else if Idx is < Idx + 1\r\n      } else {\r\n        arr[i] = { ...arr[i], highlighted: true };\r\n        arrSnapshot.push([...arr]);\r\n        arr[i] = { ...arr[i], highlighted: false };\r\n      }\r\n    }\r\n  } while (isSwapping);\r\n\r\n  // Reset Props to Initials\r\n  arrSnapshot[arrSnapshot.length - 1].forEach((idx) => {\r\n    idx.highlighted = false;\r\n  });\r\n\r\n  // Return a Sorted Array\r\n  return arrSnapshot;\r\n};\r\n\r\nexport default bubbleSort;\r\n"]},"metadata":{},"sourceType":"module"}