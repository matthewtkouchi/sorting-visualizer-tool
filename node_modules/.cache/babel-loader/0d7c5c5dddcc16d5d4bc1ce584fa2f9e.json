{"ast":null,"code":"/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: util.js\r\n Date: MAY_31_2021\r\n \r\n Abstract: Contains useful functions that are re-used by multiple files. These include generateRandomArr(size) which pushes random \r\n integers into an initialized array, swap(array, initIdx, swpIdx) which swaps two array idx's.\r\n***************************************************************************************************************************************/\nfunction getIntFromTo(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport const generateRandomArr = size => {\n  let arr = [];\n\n  for (let i = 1; i <= size; i++) {\n    arr.push({\n      value: getIntFromTo(10, 1000),\n      highlighted: false\n    });\n  }\n\n  return arr;\n};\nexport async function swap(array, initIdx, swpIdx) {\n  if (initIdx === swpIdx) {\n    return;\n  }\n\n  let temp = array[initIdx];\n  array[initIdx] = { ...array[swpIdx],\n    highlighted: true\n  };\n  array[swpIdx] = { ...temp,\n    highlighted: true\n  };\n}","map":{"version":3,"sources":["C:/Users/mkouc/sorting_visualizer/src/scripts/algorithms/util.js"],"names":["getIntFromTo","min","max","Math","floor","random","generateRandomArr","size","arr","i","push","value","highlighted","swap","array","initIdx","swpIdx","temp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;AAED,OAAO,MAAMK,iBAAiB,GAAIC,IAAD,IAAU;AACzC,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,IAArB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACPC,MAAAA,KAAK,EAAEX,YAAY,CAAC,EAAD,EAAK,IAAL,CADZ;AAEPY,MAAAA,WAAW,EAAE;AAFN,KAAT;AAID;;AACD,SAAOJ,GAAP;AACD,CATM;AAWP,OAAO,eAAeK,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4C;AACjD,MAAID,OAAO,KAAKC,MAAhB,EAAwB;AACtB;AACD;;AACD,MAAIC,IAAI,GAAGH,KAAK,CAACC,OAAD,CAAhB;AACAD,EAAAA,KAAK,CAACC,OAAD,CAAL,GAAiB,EAAE,GAAGD,KAAK,CAACE,MAAD,CAAV;AAAoBJ,IAAAA,WAAW,EAAE;AAAjC,GAAjB;AACAE,EAAAA,KAAK,CAACE,MAAD,CAAL,GAAgB,EAAE,GAAGC,IAAL;AAAWL,IAAAA,WAAW,EAAE;AAAxB,GAAhB;AACD","sourcesContent":["/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: util.js\r\n Date: MAY_31_2021\r\n \r\n Abstract: Contains useful functions that are re-used by multiple files. These include generateRandomArr(size) which pushes random \r\n integers into an initialized array, swap(array, initIdx, swpIdx) which swaps two array idx's.\r\n***************************************************************************************************************************************/\r\nfunction getIntFromTo(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport const generateRandomArr = (size) => {\r\n  let arr = [];\r\n  for (let i = 1; i <= size; i++) {\r\n    arr.push({\r\n      value: getIntFromTo(10, 1000),\r\n      highlighted: false,\r\n    });\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport async function swap(array, initIdx, swpIdx) {\r\n  if (initIdx === swpIdx) {\r\n    return;\r\n  }\r\n  let temp = array[initIdx];\r\n  array[initIdx] = { ...array[swpIdx], highlighted: true };\r\n  array[swpIdx] = { ...temp, highlighted: true };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}