{"ast":null,"code":"let globalSnapshot = [];\nlet globalArr = [];\n\nconst heapsort = arr => {\n  globalArr = [...arr];\n  globalSnapshot = [[...arr]];\n  let len = arr.length;\n\n  const heapify = (arr, i) => {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n    if (left < len && arr[left] > arr[max]) max = left;\n    if (right < len && arr[right] > arr[max]) max = right;\n\n    if (max !== i) {\n      [arr[max], arr[i]] = [arr[i], arr[max]];\n      heapify(arr, max);\n    }\n  };\n\n  for (let i = Math.floor(l / 2); i >= 0; i -= 1) heapify(arr, i);\n\n  for (i = arr.length - 1; i > 0; i--) {\n    [arr[0], arr[i]] = [arr[i], arr[0]];\n    l--;\n    heapify(arr, 0);\n  }\n\n  return arr;\n};\n\nconsole.log(heapsort([6, 3, 4, 1]));","map":{"version":3,"sources":["C:/Users/mkouc/OneDrive/Desktop/sorting_visualizer/src/scripts/algorithms/heapSort.js"],"names":["globalSnapshot","globalArr","heapsort","arr","len","length","heapify","i","left","right","max","Math","floor","l","console","log"],"mappings":"AAAA,IAAIA,cAAc,GAAG,EAArB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxBF,EAAAA,SAAS,GAAG,CAAC,GAAGE,GAAJ,CAAZ;AACAH,EAAAA,cAAc,GAAG,CAAC,CAAC,GAAGG,GAAJ,CAAD,CAAjB;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AAEA,QAAMC,OAAO,GAAG,CAACH,GAAD,EAAMI,CAAN,KAAY;AAC1B,UAAMC,IAAI,GAAG,IAAID,CAAJ,GAAQ,CAArB;AACA,UAAME,KAAK,GAAG,IAAIF,CAAJ,GAAQ,CAAtB;AACA,QAAIG,GAAG,GAAGH,CAAV;AACA,QAAIC,IAAI,GAAGJ,GAAP,IAAcD,GAAG,CAACK,IAAD,CAAH,GAAYL,GAAG,CAACO,GAAD,CAAjC,EAAwCA,GAAG,GAAGF,IAAN;AACxC,QAAIC,KAAK,GAAGL,GAAR,IAAeD,GAAG,CAACM,KAAD,CAAH,GAAaN,GAAG,CAACO,GAAD,CAAnC,EAA0CA,GAAG,GAAGD,KAAN;;AAC1C,QAAIC,GAAG,KAAKH,CAAZ,EAAe;AACb,OAACJ,GAAG,CAACO,GAAD,CAAJ,EAAWP,GAAG,CAACI,CAAD,CAAd,IAAqB,CAACJ,GAAG,CAACI,CAAD,CAAJ,EAASJ,GAAG,CAACO,GAAD,CAAZ,CAArB;AACAJ,MAAAA,OAAO,CAACH,GAAD,EAAMO,GAAN,CAAP;AACD;AACF,GAVD;;AAYA,OAAK,IAAIH,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWC,CAAC,GAAG,CAAf,CAAb,EAAgCN,CAAC,IAAI,CAArC,EAAwCA,CAAC,IAAI,CAA7C,EAAgDD,OAAO,CAACH,GAAD,EAAMI,CAAN,CAAP;;AAChD,OAAKA,CAAC,GAAGJ,GAAG,CAACE,MAAJ,GAAa,CAAtB,EAAyBE,CAAC,GAAG,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AACnC,KAACJ,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAACI,CAAD,CAAZ,IAAmB,CAACJ,GAAG,CAACI,CAAD,CAAJ,EAASJ,GAAG,CAAC,CAAD,CAAZ,CAAnB;AACAU,IAAAA,CAAC;AACDP,IAAAA,OAAO,CAACH,GAAD,EAAM,CAAN,CAAP;AACD;;AACD,SAAOA,GAAP;AACD,CAxBD;;AA0BAW,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAApB","sourcesContent":["let globalSnapshot = [];\r\nlet globalArr = [];\r\n\r\nconst heapsort = (arr) => {\r\n  globalArr = [...arr];\r\n  globalSnapshot = [[...arr]];\r\n  let len = arr.length;\r\n\r\n  const heapify = (arr, i) => {\r\n    const left = 2 * i + 1;\r\n    const right = 2 * i + 2;\r\n    let max = i;\r\n    if (left < len && arr[left] > arr[max]) max = left;\r\n    if (right < len && arr[right] > arr[max]) max = right;\r\n    if (max !== i) {\r\n      [arr[max], arr[i]] = [arr[i], arr[max]];\r\n      heapify(arr, max);\r\n    }\r\n  };\r\n\r\n  for (let i = Math.floor(l / 2); i >= 0; i -= 1) heapify(arr, i);\r\n  for (i = arr.length - 1; i > 0; i--) {\r\n    [arr[0], arr[i]] = [arr[i], arr[0]];\r\n    l--;\r\n    heapify(arr, 0);\r\n  }\r\n  return arr;\r\n};\r\n\r\nconsole.log(heapsort([6, 3, 4, 1]));\r\n"]},"metadata":{},"sourceType":"module"}