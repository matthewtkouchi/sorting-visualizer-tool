{"ast":null,"code":"let globalSnapshot = [];\nlet globalArr = [];\n\nconst heapsort = arr => {\n  globalArr = [...arr];\n  globalSnapshot = [[...arr]];\n  let l = a.length;\n\n  const heapify = (a, i) => {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n    if (left < l && a[left] > a[max]) max = left;\n    if (right < l && a[right] > a[max]) max = right;\n\n    if (max !== i) {\n      [a[max], a[i]] = [a[i], a[max]];\n      heapify(a, max);\n    }\n  };\n\n  for (let i = Math.floor(l / 2); i >= 0; i -= 1) heapify(a, i);\n\n  for (i = a.length - 1; i > 0; i--) {\n    [a[0], a[i]] = [a[i], a[0]];\n    l--;\n    heapify(a, 0);\n  }\n\n  return a;\n};\n\nconsole.log(heapsort([6, 3, 4, 1]));","map":{"version":3,"sources":["C:/Users/mkouc/OneDrive/Desktop/sorting_visualizer/src/scripts/algorithms/heapSort.js"],"names":["globalSnapshot","globalArr","heapsort","arr","l","a","length","heapify","i","left","right","max","Math","floor","console","log"],"mappings":"AAAA,IAAIA,cAAc,GAAG,EAArB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxBF,EAAAA,SAAS,GAAG,CAAC,GAAGE,GAAJ,CAAZ;AACAH,EAAAA,cAAc,GAAG,CAAC,CAAC,GAAGG,GAAJ,CAAD,CAAjB;AACA,MAAIC,CAAC,GAAGC,CAAC,CAACC,MAAV;;AAEA,QAAMC,OAAO,GAAG,CAACF,CAAD,EAAIG,CAAJ,KAAU;AACxB,UAAMC,IAAI,GAAG,IAAID,CAAJ,GAAQ,CAArB;AACA,UAAME,KAAK,GAAG,IAAIF,CAAJ,GAAQ,CAAtB;AACA,QAAIG,GAAG,GAAGH,CAAV;AACA,QAAIC,IAAI,GAAGL,CAAP,IAAYC,CAAC,CAACI,IAAD,CAAD,GAAUJ,CAAC,CAACM,GAAD,CAA3B,EAAkCA,GAAG,GAAGF,IAAN;AAClC,QAAIC,KAAK,GAAGN,CAAR,IAAaC,CAAC,CAACK,KAAD,CAAD,GAAWL,CAAC,CAACM,GAAD,CAA7B,EAAoCA,GAAG,GAAGD,KAAN;;AACpC,QAAIC,GAAG,KAAKH,CAAZ,EAAe;AACb,OAACH,CAAC,CAACM,GAAD,CAAF,EAASN,CAAC,CAACG,CAAD,CAAV,IAAiB,CAACH,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAACM,GAAD,CAAR,CAAjB;AACAJ,MAAAA,OAAO,CAACF,CAAD,EAAIM,GAAJ,CAAP;AACD;AACF,GAVD;;AAYA,OAAK,IAAIH,CAAC,GAAGI,IAAI,CAACC,KAAL,CAAWT,CAAC,GAAG,CAAf,CAAb,EAAgCI,CAAC,IAAI,CAArC,EAAwCA,CAAC,IAAI,CAA7C,EAAgDD,OAAO,CAACF,CAAD,EAAIG,CAAJ,CAAP;;AAChD,OAAKA,CAAC,GAAGH,CAAC,CAACC,MAAF,GAAW,CAApB,EAAuBE,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AACjC,KAACH,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAACG,CAAD,CAAR,IAAe,CAACH,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAAC,CAAD,CAAR,CAAf;AACAD,IAAAA,CAAC;AACDG,IAAAA,OAAO,CAACF,CAAD,EAAI,CAAJ,CAAP;AACD;;AACD,SAAOA,CAAP;AACD,CAxBD;;AA0BAS,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAApB","sourcesContent":["let globalSnapshot = [];\r\nlet globalArr = [];\r\n\r\nconst heapsort = (arr) => {\r\n  globalArr = [...arr];\r\n  globalSnapshot = [[...arr]];\r\n  let l = a.length;\r\n\r\n  const heapify = (a, i) => {\r\n    const left = 2 * i + 1;\r\n    const right = 2 * i + 2;\r\n    let max = i;\r\n    if (left < l && a[left] > a[max]) max = left;\r\n    if (right < l && a[right] > a[max]) max = right;\r\n    if (max !== i) {\r\n      [a[max], a[i]] = [a[i], a[max]];\r\n      heapify(a, max);\r\n    }\r\n  };\r\n\r\n  for (let i = Math.floor(l / 2); i >= 0; i -= 1) heapify(a, i);\r\n  for (i = a.length - 1; i > 0; i--) {\r\n    [a[0], a[i]] = [a[i], a[0]];\r\n    l--;\r\n    heapify(a, 0);\r\n  }\r\n  return a;\r\n};\r\n\r\nconsole.log(heapsort([6, 3, 4, 1]));\r\n"]},"metadata":{},"sourceType":"module"}