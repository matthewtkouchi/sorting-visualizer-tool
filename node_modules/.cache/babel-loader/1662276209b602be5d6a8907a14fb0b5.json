{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkouc\\\\sorting_visualizer\\\\src\\\\components\\\\visualizer\\\\visualizer.js\",\n    _s = $RefreshSig$();\n\n/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: bubbleSort.js\r\n Date: JUN_4_2021\r\n \r\n Abstract: Contains Bubble Sort Algorithm which iterates through an unsorted array, swapping at unsorted indexes. The highlighted\r\n indexes are chosen and set for animation through prop management. This occurs until the array doesn't swap through an iteration. At\r\n this point the snapshot container's array indexes are un-highlighted and the container is returned.\r\n***************************************************************************************************************************************/\nimport \"../../css/visualizer.css\";\nimport React, { useContext } from \"react\";\nimport SortingContext from \"../../context/sortingContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Visualizer = () => {\n  _s();\n\n  const {\n    array\n  } = useContext(SortingContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: array.currentArray.map(({\n        value,\n        idx\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value / 1.5}px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Visualizer, \"IUh0WC5JwyuUDmXKFaXsJ7jCWag=\");\n\n_c = Visualizer;\nexport default Visualizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualizer\");","map":{"version":3,"sources":["C:/Users/mkouc/sorting_visualizer/src/components/visualizer/visualizer.js"],"names":["React","useContext","SortingContext","Visualizer","array","currentArray","map","value","idx","height"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,0BAAP;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,CAACC,cAAD,CAA5B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGE,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,KAAoB;AAC1C,4BACE;AACE,UAAA,SAAS,EAAC,WADZ;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAG,GAAEF,KAAK,GAAG,GAAI;AAAzB;AAHT,WAEOC,GAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD,CAnBD;;GAAML,U;;KAAAA,U;AAqBN,eAAeA,UAAf","sourcesContent":["/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: bubbleSort.js\r\n Date: JUN_4_2021\r\n \r\n Abstract: Contains Bubble Sort Algorithm which iterates through an unsorted array, swapping at unsorted indexes. The highlighted\r\n indexes are chosen and set for animation through prop management. This occurs until the array doesn't swap through an iteration. At\r\n this point the snapshot container's array indexes are un-highlighted and the container is returned.\r\n***************************************************************************************************************************************/\r\n\r\nimport \"../../css/visualizer.css\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport SortingContext from \"../../context/sortingContext\";\r\n\r\nconst Visualizer = () => {\r\n  const { array } = useContext(SortingContext);\r\n\r\n  return (\r\n    <>\r\n      <title></title>\r\n      <div className=\"array-container\">\r\n        {array.currentArray.map(({ value, idx }) => {\r\n          return (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value / 1.5}px` }}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Visualizer;\r\n"]},"metadata":{},"sourceType":"module"}