{"ast":null,"code":"/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: selectionSort.js\r\n Date: JUN_10_2021\r\n \r\n Abstract: Selection sort iterates through an array while constantly storing the minimum valued idx. When a new minimum is selected, the\r\n idx is highlighted. And when the min of the entire iteration is selected, the current idx i and the min found through iterating through\r\n the array is swapped. This is done until all idx's become the current i.\r\n***************************************************************************************************************************************/\nimport { highlightIdx, clearIdx } from \"./util\";\n\nconst selectionSort = unsortedArray => {\n  let arr = [...unsortedArray];\n  let arrSnapshot = [[...arr]];\n  let len = arr.length;\n  let temp, min;\n\n  for (let i = 0; i < len; i++) {\n    min = i;\n\n    for (let j = i + 1; j < len; j++) {\n      highlightIdx(arr, j);\n      arrSnapshot.push([...arr]);\n      clearIdx(arr, j);\n\n      if (arr[j].value < arr[min].value) {\n        clearIdx(arr, min);\n        min = j;\n        highlightIdx(arr, min);\n      }\n\n      clearIdx(arr, min);\n    }\n\n    temp = arr[i];\n    arr[i] = arr[min];\n    arr[min] = { ...temp\n    };\n    arr[i] = { ...arr[i],\n      sorted: true\n    };\n    arrSnapshot.push([...arr]);\n  }\n\n  return arrSnapshot;\n};\n\nexport default selectionSort;","map":{"version":3,"sources":["C:/Users/mkouc/OneDrive/Desktop/sorting_visualizer/src/scripts/algorithms/selectionSort.js"],"names":["highlightIdx","clearIdx","selectionSort","unsortedArray","arr","arrSnapshot","len","length","temp","min","i","j","push","value","sorted"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,QAAvC;;AAEA,MAAMC,aAAa,GAAIC,aAAD,IAAmB;AACvC,MAAIC,GAAG,GAAG,CAAC,GAAGD,aAAJ,CAAV;AACA,MAAIE,WAAW,GAAG,CAAC,CAAC,GAAGD,GAAJ,CAAD,CAAlB;AACA,MAAIE,GAAG,GAAGF,GAAG,CAACG,MAAd;AACA,MAAIC,IAAJ,EAAUC,GAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,GAAGC,CAAN;;AACA,SAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAjB,EAAoBC,CAAC,GAAGL,GAAxB,EAA6BK,CAAC,EAA9B,EAAkC;AAChCX,MAAAA,YAAY,CAACI,GAAD,EAAMO,CAAN,CAAZ;AACAN,MAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACAH,MAAAA,QAAQ,CAACG,GAAD,EAAMO,CAAN,CAAR;;AACA,UAAIP,GAAG,CAACO,CAAD,CAAH,CAAOE,KAAP,GAAeT,GAAG,CAACK,GAAD,CAAH,CAASI,KAA5B,EAAmC;AACjCZ,QAAAA,QAAQ,CAACG,GAAD,EAAMK,GAAN,CAAR;AACAA,QAAAA,GAAG,GAAGE,CAAN;AACAX,QAAAA,YAAY,CAACI,GAAD,EAAMK,GAAN,CAAZ;AACD;;AACDR,MAAAA,QAAQ,CAACG,GAAD,EAAMK,GAAN,CAAR;AACD;;AACDD,IAAAA,IAAI,GAAGJ,GAAG,CAACM,CAAD,CAAV;AACAN,IAAAA,GAAG,CAACM,CAAD,CAAH,GAASN,GAAG,CAACK,GAAD,CAAZ;AACAL,IAAAA,GAAG,CAACK,GAAD,CAAH,GAAW,EAAE,GAAGD;AAAL,KAAX;AACAJ,IAAAA,GAAG,CAACM,CAAD,CAAH,GAAS,EAAE,GAAGN,GAAG,CAACM,CAAD,CAAR;AAAaI,MAAAA,MAAM,EAAE;AAArB,KAAT;AACAT,IAAAA,WAAW,CAACO,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACD;;AAED,SAAOC,WAAP;AACD,CA3BD;;AA6BA,eAAeH,aAAf","sourcesContent":["/***************************************************************************************************************************************\r\n Name: Matthew Kouchi\r\n File: selectionSort.js\r\n Date: JUN_10_2021\r\n \r\n Abstract: Selection sort iterates through an array while constantly storing the minimum valued idx. When a new minimum is selected, the\r\n idx is highlighted. And when the min of the entire iteration is selected, the current idx i and the min found through iterating through\r\n the array is swapped. This is done until all idx's become the current i.\r\n***************************************************************************************************************************************/\r\nimport { highlightIdx, clearIdx } from \"./util\";\r\n\r\nconst selectionSort = (unsortedArray) => {\r\n  let arr = [...unsortedArray];\r\n  let arrSnapshot = [[...arr]];\r\n  let len = arr.length;\r\n  let temp, min;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    min = i;\r\n    for (let j = i + 1; j < len; j++) {\r\n      highlightIdx(arr, j);\r\n      arrSnapshot.push([...arr]);\r\n      clearIdx(arr, j);\r\n      if (arr[j].value < arr[min].value) {\r\n        clearIdx(arr, min);\r\n        min = j;\r\n        highlightIdx(arr, min);\r\n      }\r\n      clearIdx(arr, min);\r\n    }\r\n    temp = arr[i];\r\n    arr[i] = arr[min];\r\n    arr[min] = { ...temp };\r\n    arr[i] = { ...arr[i], sorted: true };\r\n    arrSnapshot.push([...arr]);\r\n  }\r\n\r\n  return arrSnapshot;\r\n};\r\n\r\nexport default selectionSort;\r\n"]},"metadata":{},"sourceType":"module"}