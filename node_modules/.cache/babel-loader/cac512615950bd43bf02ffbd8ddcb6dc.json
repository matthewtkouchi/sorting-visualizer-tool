{"ast":null,"code":"const selectionSort = unsortedArray => {\n  let arr = [...unsortedArray];\n  let len = arr.length;\n  let arrSnapshot = [[...arr]];\n  let min;\n\n  for (var i = 0; i < len; i++) {\n    min = i;\n\n    for (var j = i + 1; j < len; j++) {\n      arr[j] = { ...arr[j],\n        selected: true\n      };\n      arrSnapshot.push([...arr]);\n      arr[j] = { ...arr[j],\n        selected: false\n      };\n\n      if (arr[j].value < arr[min].value) {\n        arr[min] = { ...arr[min],\n          selected: false\n        };\n        min = j;\n        arr[min] = { ...arr[min],\n          selected: true\n        };\n      }\n    }\n\n    arr[i] = arr[min];\n  }\n\n  return arrSnapshot;\n};\n\nexport default selectionSort;","map":{"version":3,"sources":["C:/Users/mkouc/sorting_visualizer/src/scripts/algorithms/selectionSort.js"],"names":["selectionSort","unsortedArray","arr","len","length","arrSnapshot","min","i","j","selected","push","value"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,aAAD,IAAmB;AACvC,MAAIC,GAAG,GAAG,CAAC,GAAGD,aAAJ,CAAV;AACA,MAAIE,GAAG,GAAGD,GAAG,CAACE,MAAd;AACA,MAAIC,WAAW,GAAG,CAAC,CAAC,GAAGH,GAAJ,CAAD,CAAlB;AACA,MAAII,GAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,GAAG,GAAGC,CAAN;;AACA,SAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAjB,EAAoBC,CAAC,GAAGL,GAAxB,EAA6BK,CAAC,EAA9B,EAAkC;AAChCN,MAAAA,GAAG,CAACM,CAAD,CAAH,GAAS,EAAE,GAAGN,GAAG,CAACM,CAAD,CAAR;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAT;AACAJ,MAAAA,WAAW,CAACK,IAAZ,CAAiB,CAAC,GAAGR,GAAJ,CAAjB;AACAA,MAAAA,GAAG,CAACM,CAAD,CAAH,GAAS,EAAE,GAAGN,GAAG,CAACM,CAAD,CAAR;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAT;;AACA,UAAIP,GAAG,CAACM,CAAD,CAAH,CAAOG,KAAP,GAAeT,GAAG,CAACI,GAAD,CAAH,CAASK,KAA5B,EAAmC;AACjCT,QAAAA,GAAG,CAACI,GAAD,CAAH,GAAW,EAAE,GAAGJ,GAAG,CAACI,GAAD,CAAR;AAAeG,UAAAA,QAAQ,EAAE;AAAzB,SAAX;AACAH,QAAAA,GAAG,GAAGE,CAAN;AACAN,QAAAA,GAAG,CAACI,GAAD,CAAH,GAAW,EAAE,GAAGJ,GAAG,CAACI,GAAD,CAAR;AAAeG,UAAAA,QAAQ,EAAE;AAAzB,SAAX;AACD;AACF;;AACDP,IAAAA,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACI,GAAD,CAAZ;AACD;;AAED,SAAOD,WAAP;AACD,CAtBD;;AAwBA,eAAeL,aAAf","sourcesContent":["const selectionSort = (unsortedArray) => {\r\n  let arr = [...unsortedArray];\r\n  let len = arr.length;\r\n  let arrSnapshot = [[...arr]];\r\n  let min;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    min = i;\r\n    for (var j = i + 1; j < len; j++) {\r\n      arr[j] = { ...arr[j], selected: true };\r\n      arrSnapshot.push([...arr]);\r\n      arr[j] = { ...arr[j], selected: false };\r\n      if (arr[j].value < arr[min].value) {\r\n        arr[min] = { ...arr[min], selected: false };\r\n        min = j;\r\n        arr[min] = { ...arr[min], selected: true };\r\n      }\r\n    }\r\n    arr[i] = arr[min];\r\n  }\r\n\r\n  return arrSnapshot;\r\n};\r\n\r\nexport default selectionSort;\r\n"]},"metadata":{},"sourceType":"module"}